[{"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\index.js":"1","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\reportWebVitals.js":"2","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\App.js":"3","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\contexts\\AuthProvider.js":"4","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\Routes\\Routes.js":"5","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\firebase\\firebase.config.js":"6","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Layout\\Main.js":"7","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Layout\\DashboardLayout.js":"8","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\PrivateRoute\\PrivateRoute.js":"9","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\AdminRoute\\AdminRoute.js":"10","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Home.js":"11","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Login\\Login.js":"12","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Login\\SignUp.js":"13","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\Appointments.js":"14","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\About.js":"15","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Doctors\\Doctors.js":"16","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\MyAppointment\\MyAppointment.js":"17","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\AddDoctor\\AddDoctor.js":"18","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\AllUser\\AllUser.js":"19","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\ManageDoctor\\ManageDoctor.js":"20","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\firebase.init.js":"21","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\hooks\\useToken.js":"22","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\hooks\\useAdmin.js":"23","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Banner.js":"24","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeForm.js":"25","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeTestimonials.js":"26","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Info.js":"27","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\AppointmentBanner.js":"28","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\AvailableAppointments.js":"29","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\MakeAppointment.js":"30","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\AboutInfo.js":"31","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\AboutBanner.js":"32","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Services.js":"33","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Doctors\\Doctor.js":"34","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Navbar\\Navbar.js":"35","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Loading\\Loading.js":"36","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Footer\\Footer.js":"37","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\ConfirmationModal\\ConfirmationModal.js":"38","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeTestimonial.js":"39","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\InfoCard.js":"40","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\BookingModal.js":"41","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\Service.js":"42","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Service.js":"43","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\ServiceBanner.js":"44"},{"size":861,"mtime":1677912837721,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1677912837722,"results":"47","hashOfConfig":"46"},{"size":406,"mtime":1677912837639,"results":"48","hashOfConfig":"46"},{"size":1495,"mtime":1677912837718,"results":"49","hashOfConfig":"46"},{"size":2591,"mtime":1677912837668,"results":"50","hashOfConfig":"46"},{"size":565,"mtime":1677912837719,"results":"51","hashOfConfig":"46"},{"size":356,"mtime":1677912837640,"results":"52","hashOfConfig":"46"},{"size":2922,"mtime":1677912837640,"results":"53","hashOfConfig":"46"},{"size":667,"mtime":1677912837667,"results":"54","hashOfConfig":"46"},{"size":800,"mtime":1677912837666,"results":"55","hashOfConfig":"46"},{"size":563,"mtime":1677912837655,"results":"56","hashOfConfig":"46"},{"size":5494,"mtime":1677912837660,"results":"57","hashOfConfig":"46"},{"size":6520,"mtime":1677915047291,"results":"58","hashOfConfig":"46"},{"size":507,"mtime":1677912837644,"results":"59","hashOfConfig":"46"},{"size":874,"mtime":1677912837642,"results":"60","hashOfConfig":"46"},{"size":1585,"mtime":1677934569529,"results":"61","hashOfConfig":"46"},{"size":2341,"mtime":1677915047342,"results":"62","hashOfConfig":"46"},{"size":5949,"mtime":1677915047342,"results":"63","hashOfConfig":"46"},{"size":2432,"mtime":1677915047342,"results":"64","hashOfConfig":"46"},{"size":5685,"mtime":1677915047344,"results":"65","hashOfConfig":"46"},{"size":652,"mtime":1677912837718,"results":"66","hashOfConfig":"46"},{"size":605,"mtime":1677915047346,"results":"67","hashOfConfig":"46"},{"size":579,"mtime":1677915047350,"results":"68","hashOfConfig":"46"},{"size":1344,"mtime":1677912837654,"results":"69","hashOfConfig":"46"},{"size":153,"mtime":1677912837655,"results":"70","hashOfConfig":"46"},{"size":2370,"mtime":1677912837656,"results":"71","hashOfConfig":"46"},{"size":862,"mtime":1677912837657,"results":"72","hashOfConfig":"46"},{"size":746,"mtime":1677912837643,"results":"73","hashOfConfig":"46"},{"size":1495,"mtime":1677915047345,"results":"74","hashOfConfig":"46"},{"size":1619,"mtime":1677912837658,"results":"75","hashOfConfig":"46"},{"size":3173,"mtime":1677912837643,"results":"76","hashOfConfig":"46"},{"size":1342,"mtime":1677912837642,"results":"77","hashOfConfig":"46"},{"size":1563,"mtime":1677912837659,"results":"78","hashOfConfig":"46"},{"size":1118,"mtime":1677912837653,"results":"79","hashOfConfig":"46"},{"size":3050,"mtime":1677912837665,"results":"80","hashOfConfig":"46"},{"size":252,"mtime":1677912837664,"results":"81","hashOfConfig":"46"},{"size":4391,"mtime":1677912837663,"results":"82","hashOfConfig":"46"},{"size":1045,"mtime":1677912837663,"results":"83","hashOfConfig":"46"},{"size":789,"mtime":1677912837656,"results":"84","hashOfConfig":"46"},{"size":674,"mtime":1677912837658,"results":"85","hashOfConfig":"46"},{"size":3587,"mtime":1677915047346,"results":"86","hashOfConfig":"46"},{"size":1353,"mtime":1677912837646,"results":"87","hashOfConfig":"46"},{"size":951,"mtime":1677912837659,"results":"88","hashOfConfig":"46"},{"size":1294,"mtime":1677912837659,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g49t0c",{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\index.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\App.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\contexts\\AuthProvider.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\Routes\\Routes.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\firebase\\firebase.config.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Layout\\Main.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Layout\\DashboardLayout.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\PrivateRoute\\PrivateRoute.js",["228"],[],"import React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthProvider';\r\nimport Loading from '../../Pages/Shared/Loading/Loading';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { user, loading } = useContext(AuthContext)\r\n    const location = useLocation()\r\n\r\n    if (loading) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    if (user) {\r\n        return children;\r\n    } else {\r\n        return <Navigate to=\"/login\" state={{ from: location }} replace ></Navigate>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Routes\\AdminRoute\\AdminRoute.js",["229"],[],"import React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthProvider';\r\nimport useAdmin from '../../hooks/useAdmin';\r\nimport Loading from '../../Pages/Shared/Loading/Loading';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n    const { user, loading } = useContext(AuthContext)\r\n    const [isAdmin,isAdminLoading] = useAdmin(user?.email)\r\n    const location = useLocation()\r\n\r\n    if (loading  || isAdminLoading) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    if (user  && isAdmin) {\r\n        return children;\r\n    } else {\r\n        return <Navigate to=\"/login\" state={{ from: location }} replace ></Navigate>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminRoute;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Home.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Login\\Login.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Login\\SignUp.js",["230"],[],"import React, { useContext, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport auth from '../../firebase.init';\r\nimport { useSignInWithGoogle } from 'react-firebase-hooks/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthProvider';\r\nimport { toast } from 'react-hot-toast';\r\nimport useToken from '../../hooks/useToken';\r\n\r\nconst SignUp = () => {\r\n\r\n    //Create user --> Update User --> Save User --->User email Token from hooks---> Navigate to the target page//\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const { createUser, updateUser } = useContext(AuthContext);\r\n    const [signupErrors, setSignupError] = useState('')\r\n\r\n    const [cretaedUserEmail, setCreatedUserEmail] = useState('')\r\n    const [token] = useToken(cretaedUserEmail);\r\n    const navigate = useNavigate()\r\n\r\n\r\n    if(token){\r\n        navigate('/')\r\n    }\r\n\r\n    //Google log in\r\n    const [signInWithGoogle, gUser] = useSignInWithGoogle(auth);\r\n    if (gUser) {\r\n        console.log(gUser)\r\n    }\r\n\r\n\r\n\r\n\r\n    //handle submit \r\n    const onSubmit = async data => {\r\n        console.log(data)\r\n        setSignupError('')\r\n        createUser(data.email, data.password)\r\n            .then(result => {\r\n                const user = result.user;\r\n                console.log(user)\r\n                //Toaster\r\n                toast('User Created Successfully.')\r\n                //update userInformation\r\n                const userInfo = {\r\n                    displayName: data.name\r\n                }\r\n                updateUser(userInfo)\r\n                    .then(() => {\r\n                        saveUser(data.name, data.email);\r\n\r\n                    })\r\n                    .then(err => console.log(err))\r\n            })\r\n            .catch(error => setSignupError(error.message))\r\n    };\r\n\r\n\r\n    ///When user create a new account save in db and match with token then call the token for redirect to the page\r\n    const saveUser = (name, email) => {\r\n        const user = { name, email };\r\n        fetch('http://localhost:5000/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCreatedUserEmail(email)\r\n                console.log('Save User', data)\r\n            })\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=' flex h-screen justify-center font-mono bg-black items-center'>\r\n            <div className=\"card w-96 bg-base-100 shadow-xl\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"text-center text-2xl text-teal-600 uppercase font-bold\">Sign Up</h2>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n                        <div className=\"form-control w-full max-w-xs\">\r\n\r\n                            <label className=\"label\">\r\n                                <span className=\"label-text text-teal-600 uppercase \">Name:</span>\r\n\r\n                            </label>\r\n\r\n                            <input type=\"name\"\r\n                                {...register(\"name\", {\r\n                                    required: {\r\n                                        value: true, message: \"Name is Required\"\r\n                                    }\r\n                                })}\r\n                                placeholder=\"Your Full Name\"\r\n                                className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-control w-full max-w-xs\">\r\n\r\n                            <label className=\"label\">\r\n                                <span className=\"label-text text-teal-600 uppercase \">Email:</span>\r\n\r\n                            </label>\r\n\r\n                            <input type=\"email\"\r\n                                {...register(\"email\", {\r\n                                    required: {\r\n                                        value: true, message: \"Email is Required\"\r\n                                    }\r\n                                },\r\n                                    {\r\n                                        pattern: /[A-Za-z]{3}/,\r\n                                        message: \"Provide a valid email address\"\r\n                                    })}\r\n                                placeholder=\"Your Email\"\r\n                                className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-control w-full max-w-xs\">\r\n\r\n                            <label className=\"label\">\r\n                                <span className=\"label-text text-teal-600 uppercase \">Password:</span>\r\n\r\n                            </label>\r\n\r\n                            <input type=\"password\"\r\n                                {...register(\"password\", {\r\n                                    required: {\r\n                                        value: true, message: \"Password is Required\"\r\n                                    }\r\n                                },\r\n                                    {\r\n                                        minLength: 6,\r\n                                        message: \"Provide a valid password \"\r\n                                    })}\r\n                                placeholder=\"Your Password\"\r\n                                className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                        </div>\r\n                        <br />\r\n\r\n                        <input className='btn w-full max-w-xs text-white bg-black' type=\"submit\" value=\"Sign Up \" />\r\n                        {\r\n                            signupErrors && <p className='text-red-600'>{signupErrors}</p>\r\n                        }\r\n                    </form>\r\n\r\n                    <p>Already have an account ? <Link to=\"/login\" className='text-teal-600 bg-black uppercase '>Login</Link> </p>\r\n\r\n                    <div className='divider text-teal-600 text-3xl uppercase '>OR</div>\r\n                    <button\r\n                        onClick={() => signInWithGoogle()}\r\n                        className='btn btn-outline text-teal-600 uppercase  bg-black'>\r\n                        Continue with Google</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\Appointments.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\About.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Doctors\\Doctors.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\MyAppointment\\MyAppointment.js",["231"],[],"\r\nimport React, { useContext } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../contexts/AuthProvider';\r\n\r\nconst MyAppointment = () => {\r\n\r\n    const { user } = useContext(AuthContext)\r\n    const url = `http://localhost:5000/bookings?email=${user?.email}`;\r\n\r\n\r\n    const { data: bookings = [] } = useQuery({\r\n        queryKey: ['bookings', user?.email],\r\n        queryFn: async () => {\r\n            const res = await fetch(url, {\r\n                headers: {\r\n                    authorization: `bearer ${localStorage.getItem('accessToken')}`\r\n                }\r\n            });\r\n            const data = await res.json();\r\n            return data;\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='text-3xl text-center uppercase'>My Appointments</h2>\r\n\r\n            <div className='mb-5'>\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"table w-full\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                                <th>Treatment</th>\r\n                                <th>Date</th>\r\n                                <th>Time</th>\r\n                                <th>Payment</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {bookings &&\r\n                                bookings?.map((booking, i) =>\r\n                                    <tr className='hover' key={booking._id}>\r\n                                        <th>{i + 1}</th>\r\n                                        <td>{booking.patientName}</td>\r\n                                        <td>{booking.treatment}</td>\r\n                                        <td>{booking.appointmentDate}</td>\r\n                                        <td>{booking.slot}</td>\r\n                                        <td>${booking.price}</td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyAppointment;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\AddDoctor\\AddDoctor.js",["232"],[],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Loading from '../../Shared/Loading/Loading';\r\nimport { useQuery } from 'react-query';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AddDoctor = () => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const imageHostKey=process.env.REACT_APP_imgbb_key\r\n    const navigate=useNavigate()\r\n \r\n\r\n  // options fetch\r\n    const { data: specialties, isLoading } = useQuery({\r\n        queryKey: ['specialty'],\r\n        queryFn: async () => {\r\n            const res = await fetch(`http://localhost:5000/appointmentSpecialty`);\r\n            const data = await res.json();\r\n            return data;\r\n\r\n        }\r\n    })\r\n\r\n    if (isLoading) {\r\n        return <Loading></Loading>\r\n    }\r\n\r\n    const handleAddDoctor = data => {\r\n   \r\n        ///image file upload target\r\n        const image=data.image[0];\r\n        const formData=new FormData();\r\n        formData.append('image',image)\r\n        const url=`https://api.imgbb.com/1/upload?key=${imageHostKey}`\r\n        console.log(url)\r\n\r\n        fetch(url,{\r\n            method:'POST',\r\n            body:formData\r\n        })\r\n\r\n        .then(res=>res.json())\r\n        .then(imgData=>{\r\n           \r\n            if(imgData.success){\r\n                console.log(imgData.data.url)\r\n                //backend data send\r\n                const doctor={\r\n                    name:data.name,\r\n                    email:data.email,\r\n                    specialty:data.specialty,\r\n                    image:imgData.data.url\r\n                }\r\n\r\n                 fetch(`http://localhost:5000/doctors`,{\r\n                    method:\"POST\",\r\n                    headers:{\r\n                        'content-type':'application/json',\r\n                        authorization:`bearer ${localStorage.getItem('accessToken')}`\r\n                    },\r\n                    body:JSON.stringify(doctor)\r\n                 })\r\n\r\n                 .then(res=>res.json())\r\n                 .then(result=>{\r\n                    console.log(result)\r\n                    toast.success(`${data.name} is added successfully`)\r\n                    navigate('/dashboard/managedoctor')\r\n                 })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='w-96 p-7'>\r\n            <h2 className='text-4xl uppercase'>Add a Doctor</h2>\r\n            <>\r\n                <form onSubmit={handleSubmit(handleAddDoctor)}>\r\n\r\n\r\n                    <div className=\"form-control w-full max-w-xs\">\r\n\r\n                        <label className=\"label\">\r\n                            <span className=\"label-text\">Name:</span>\r\n\r\n                        </label>\r\n\r\n                        <input type=\"name\"\r\n                            {...register(\"name\", {\r\n                                required: {\r\n                                    value: true, message: \"Name is Required\"\r\n                                }\r\n                            })}\r\n                            placeholder=\"Your Name\"\r\n                            className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-control w-full max-w-xs\">\r\n\r\n                        <label className=\"label\">\r\n                            <span className=\"label-text\">Email:</span>\r\n\r\n                        </label>\r\n\r\n                        <input type=\"email\"\r\n                            {...register(\"email\", {\r\n                                required: {\r\n                                    value: true, message: \"Email is Required\"\r\n                                }\r\n                            },\r\n                                {\r\n                                    pattern: /[A-Za-z]{3}/,\r\n                                    message: \"Provide a valid email address\"\r\n                                })}\r\n                            placeholder=\"Your Email\"\r\n                            className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-control w-full max-w-xs\">\r\n\r\n                        <label className=\"label\">\r\n                            <span className=\"label-text\">Speacialty :</span>\r\n                        </label>\r\n\r\n                        <select\r\n                            {...register(`specialty`)}\r\n                            className=\"select input-bordered w-full max-w-xs\">\r\n                            <option disabled selected>Pick a Speacialty</option>\r\n                            {\r\n                                specialties.map(specialty => <option\r\n                                    key={specialty._id}\r\n                                    value={specialty.name}\r\n                                >{specialty.name}</option>)\r\n                            }\r\n                        </select>\r\n\r\n\r\n\r\n\r\n                        <div className=\"form-control w-full max-w-xs\">\r\n\r\n                            <label className=\"label\">\r\n                                <span className=\"label-text\">Photo</span>\r\n\r\n                            </label>\r\n\r\n                            <input type=\"file\"\r\n                                {...register(\"image\" , {\r\n                                    required: {\r\n                                        value: true, message: \"Photo is Required\"\r\n                                    }\r\n                                })}\r\n                                placeholder=\"Your Photo\"\r\n                                className=\"input input-bordered w-full max-w-xs\" />\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                    <br />\r\n\r\n                    <input className='btn w-full max-w-xs text-whit' type=\"submit\" value=\"Add Doctor \" />\r\n\r\n                </form>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddDoctor;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\AllUser\\AllUser.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Dashboard\\ManageDoctor\\ManageDoctor.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\firebase.init.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\hooks\\useToken.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\hooks\\useAdmin.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Banner.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeForm.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeTestimonials.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Info.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\AppointmentBanner.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\AvailableAppointments.js",["233"],[],"import { format } from 'date-fns';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { AuthContext } from '../../contexts/AuthProvider';\r\nimport BookingModal from './BookingModal';\r\nimport Service from './Service';\r\n\r\nconst AvailableAppointments = ({ selectedDate }) => {\r\n    const date = format(selectedDate, 'PP')\r\n    const [treatment, setTreatment] = useState(null)\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n\r\n    const { data: services = [], refetch } = useQuery({\r\n        queryKey: ['service', date],\r\n        queryFn: () => fetch(`http://localhost:5000/service?date=${date}`)\r\n            .then(res => res.json())\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='text-center text-3xl text-primary'>Available Appointments on {format(selectedDate, 'PP')}</h1>\r\n            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\r\n                {\r\n                    services.map(service => <Service service={service} setTreatment={setTreatment} key={service._id}></Service>)\r\n                }\r\n            </div>\r\n\r\n            <>\r\n                {\r\n                    treatment && <BookingModal treatment={treatment}\r\n                        refetch={refetch}\r\n                        selectedDate={selectedDate}\r\n                        setTreatment={setTreatment} />\r\n                }\r\n            </>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableAppointments;","C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\MakeAppointment.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\AboutInfo.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\About\\AboutBanner.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Services.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Doctors\\Doctor.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Navbar\\Navbar.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Loading\\Loading.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\Footer\\Footer.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Shared\\ConfirmationModal\\ConfirmationModal.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\HomeTestimonial.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\InfoCard.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\BookingModal.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Appointments\\Service.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\Service.js",[],[],"C:\\Users\\User\\projects\\doctor\\Doctor-Portal\\src\\Pages\\Home\\ServiceBanner.js",[],[],{"ruleId":"234","severity":1,"message":"235","line":21,"column":5,"nodeType":"236","messageId":"237","endLine":25,"endColumn":7},{"ruleId":"234","severity":1,"message":"235","line":23,"column":5,"nodeType":"236","messageId":"237","endLine":27,"endColumn":7},{"ruleId":"238","severity":1,"message":"239","line":13,"column":50,"nodeType":"240","messageId":"241","endLine":13,"endColumn":56},{"ruleId":"238","severity":1,"message":"242","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":9,"column":50,"nodeType":"240","messageId":"241","endLine":9,"endColumn":56},{"ruleId":"238","severity":1,"message":"243","line":13,"column":13,"nodeType":"240","messageId":"241","endLine":13,"endColumn":17},"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'user' is assigned a value but never used."]